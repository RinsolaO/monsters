{"version":3,"sources":["components/card/Card.jsx","components/card-list/CardList.jsx","components/search-box/Searchbox.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","Searchbox","onChange","placeholder","type","App","handleChange","e","setState","searchField","target","value","state","isLoading","error","fetch","then","res","ok","json","Error","console","log","users","catch","err","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uSAeeA,EAbF,SAACC,GACZ,OACE,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BACHC,IAAI,YAEN,mCAAML,EAAMG,QAAQG,QACpB,kCAAKN,EAAMG,QAAQI,aCIVC,G,MAVE,SAACR,GAChB,OACE,qBAAKC,UAAU,YAAf,SACGD,EAAMS,SAASC,KAAI,SAACP,GAAD,OAClB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCOZO,G,YAbG,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,SAAUX,EAA6B,EAA7BA,UAAWY,EAAkB,EAAlBA,YACxC,OACE,8BACE,uBACEZ,UAAWA,EACXa,KAAK,SACLD,YAAaA,EACbD,SAAUA,QCsDHG,E,kDAzDb,aAAe,IAAD,8BACZ,gBA+BFC,aAAe,SAACC,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SA9BtC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,GACbI,WAAW,EACXC,MAAO,MAPG,E,qDAWd,WAAqB,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAACC,GAEL,GADA,EAAKT,SAAS,CAAEK,WAAW,IACtBI,EAAIC,GAGP,OAAOD,EAAIE,OAFX,MAAMC,MAAMC,QAAQC,IAAI,8BAK3BN,MAAK,SAACO,GACL,EAAKf,SAAS,CAAET,SAAUwB,IAC1B,EAAKf,SAAS,CAAEK,WAAW,IAC3B,EAAKL,SAAS,CAAEM,MAAO,UAExBU,OAAM,SAACC,GACN,EAAKjB,SAAS,CAAEM,MAAOM,QACvB,EAAKZ,SAAS,CAAEK,WAAW,S,oBAOjC,WAAU,IAAD,EAC6Ca,KAAKd,MAAjDb,EADD,EACCA,SAAUU,EADX,EACWA,YAAaI,EADxB,EACwBA,UAAWC,EADnC,EACmCA,MACpCa,EAAmB5B,EAAS6B,QAAO,SAACnC,GAAD,OACvCA,EAAQG,KAAKiC,cAAcC,SAASrB,EAAYoB,kBAElD,OACE,sBAAKtC,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CACEY,YAAY,mBACZZ,UAAU,eACVW,SAAUwB,KAAKpB,eAEhBO,GAAa,6CACbC,GAAS,kFAEV,cAAC,EAAD,CAAUf,SAAU4B,W,GApDVI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.45b03112.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Card.css\";\r\nconst Card = (props) => {\r\n  return (\r\n    <div className=\"card-container\">\r\n      <img\r\n        src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\r\n        alt=\"monster\"\r\n      />\r\n      <h1> {props.monster.name}</h1>\r\n      <p> {props.monster.email}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"../card/Card\";\r\nimport \"./CardList.css\";\r\n\r\nconst CardList = (props) => {\r\n  return (\r\n    <div className=\"card-list\">\r\n      {props.monsters.map((monster) => (\r\n        <Card key={monster.id} monster={monster} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardList;\r\n","import React from \"react\";\r\nimport \"./Searchbox.css\";\r\nconst Searchbox = ({ onChange, className, placeholder }) => {\r\n  return (\r\n    <div>\r\n      <input\r\n        className={className}\r\n        type=\"search\"\r\n        placeholder={placeholder}\r\n        onChange={onChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Searchbox;\r\n","import React, { Component } from \"react\";\nimport CardList from \"./components/card-list/CardList\";\nimport \"./App.css\";\nimport Searchbox from \"./components/search-box/Searchbox\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: \"\",\n      isLoading: true,\n      error: null,\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((res) => {\n        this.setState({ isLoading: true });\n        if (!res.ok) {\n          throw Error(console.log(\"Couldn't Load EndPoint\"));\n        } else {\n          return res.json();\n        }\n      })\n      .then((users) => {\n        this.setState({ monsters: users });\n        this.setState({ isLoading: false });\n        this.setState({ error: null });\n      })\n      .catch((err) => {\n        this.setState({ error: Error });\n        this.setState({ isLoading: false });\n      });\n  }\n\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value });\n  };\n  render() {\n    const { monsters, searchField, isLoading, error } = this.state;\n    const filteredMonsters = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n    return (\n      <div className=\"App\">\n        <h1>Frenzy Monsters</h1>\n        <Searchbox\n          placeholder=\"search a monster\"\n          className=\"search-field\"\n          onChange={this.handleChange}\n        />\n        {isLoading && <h1> Loading...</h1>}\n        {error && <h1> Please Check That You Have An Active Connection</h1>}\n\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}